Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     statement -> factor
Rule 3     statement -> list
Rule 4     expression -> expression PLUS factor
Rule 5     expression -> factor PLUS factor
Rule 6     expression -> expression MINUS factor
Rule 7     expression -> factor MINUS factor
Rule 8     factor -> factor TIMES factor
Rule 9     factor -> factor DIVIDE factor
Rule 10    factor -> factor EXP factor
Rule 11    factor -> factor factor
Rule 12    factor -> MINUS factor
Rule 13    factor -> factor FACTORIAL
Rule 14    factor -> CHOOSE LPAREN list RPAREN
Rule 15    factor -> PERMUTE LPAREN list RPAREN
Rule 16    factor -> Q LPAREN factor RPAREN
Rule 17    factor -> Q LPAREN expression RPAREN
Rule 18    factor -> LPAREN expression RPAREN
Rule 19    factor -> LBRACKET expression RBRACKET
Rule 20    factor -> LPAREN factor RPAREN
Rule 21    factor -> LBRACKET factor RBRACKET
Rule 22    factor -> COMPUTE LPAREN expression RPAREN
Rule 23    factor -> COMPUTE LPAREN factor RPAREN
Rule 24    factor -> LPAREN expression
Rule 25    factor -> LBRACKET expression
Rule 26    factor -> LPAREN factor
Rule 27    factor -> LBRACKET factor
Rule 28    factor -> CHOOSE LPAREN list
Rule 29    factor -> PERMUTE LPAREN list
Rule 30    factor -> LSET list RSET
Rule 31    factor -> LSET expression RSET
Rule 32    factor -> LSET RSET
Rule 33    factor -> LPAREN list RPAREN
Rule 34    list -> expression COMMA
Rule 35    list -> list expression COMMA
Rule 36    list -> list expression
Rule 37    list -> factor COMMA
Rule 38    list -> list factor COMMA
Rule 39    list -> list factor
Rule 40    factor -> NUMBER
Rule 41    factor -> VARIABLE

Terminals, with rules where they appear

CHOOSE               : 14 28
COMMA                : 34 35 37 38
COMPUTE              : 22 23
DIVIDE               : 9
EXP                  : 10
FACTORIAL            : 13
LBRACKET             : 19 21 25 27
LPAREN               : 14 15 16 17 18 20 22 23 24 26 28 29 33
LSET                 : 30 31 32
MINUS                : 6 7 12
NUMBER               : 40
PERMUTE              : 15 29
PLUS                 : 4 5
Q                    : 16 17
RBRACKET             : 19 21
RPAREN               : 14 15 16 17 18 20 22 23 33
RSET                 : 30 31 32
TIMES                : 8
VARIABLE             : 41
error                : 

Nonterminals, with rules where they appear

expression           : 1 4 6 17 18 19 22 24 25 31 34 35 36
factor               : 2 4 5 5 6 7 7 8 8 9 9 10 10 11 11 12 13 16 20 21 23 26 27 37 38 39
list                 : 3 14 15 28 29 30 33 35 36 38 39
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) statement -> . factor
    (3) statement -> . list
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE
    (34) list -> . expression COMMA
    (35) list -> . list expression COMMA
    (36) list -> . list expression
    (37) list -> . factor COMMA
    (38) list -> . list factor COMMA
    (39) list -> . list factor

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    list                           shift and go to state 12
    expression                     shift and go to state 14
    statement                      shift and go to state 5
    factor                         shift and go to state 6

state 1

    (40) factor -> NUMBER .

    TIMES           reduce using rule 40 (factor -> NUMBER .)
    DIVIDE          reduce using rule 40 (factor -> NUMBER .)
    EXP             reduce using rule 40 (factor -> NUMBER .)
    FACTORIAL       reduce using rule 40 (factor -> NUMBER .)
    MINUS           reduce using rule 40 (factor -> NUMBER .)
    CHOOSE          reduce using rule 40 (factor -> NUMBER .)
    PERMUTE         reduce using rule 40 (factor -> NUMBER .)
    Q               reduce using rule 40 (factor -> NUMBER .)
    LPAREN          reduce using rule 40 (factor -> NUMBER .)
    LBRACKET        reduce using rule 40 (factor -> NUMBER .)
    COMPUTE         reduce using rule 40 (factor -> NUMBER .)
    LSET            reduce using rule 40 (factor -> NUMBER .)
    NUMBER          reduce using rule 40 (factor -> NUMBER .)
    VARIABLE        reduce using rule 40 (factor -> NUMBER .)
    COMMA           reduce using rule 40 (factor -> NUMBER .)
    PLUS            reduce using rule 40 (factor -> NUMBER .)
    RBRACKET        reduce using rule 40 (factor -> NUMBER .)
    $end            reduce using rule 40 (factor -> NUMBER .)
    RPAREN          reduce using rule 40 (factor -> NUMBER .)
    RSET            reduce using rule 40 (factor -> NUMBER .)


state 2

    (19) factor -> LBRACKET . expression RBRACKET
    (21) factor -> LBRACKET . factor RBRACKET
    (25) factor -> LBRACKET . expression
    (27) factor -> LBRACKET . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 16
    factor                         shift and go to state 15

state 3

    (12) factor -> MINUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 17

state 4

    (30) factor -> LSET . list RSET
    (31) factor -> LSET . expression RSET
    (32) factor -> LSET . RSET
    (34) list -> . expression COMMA
    (35) list -> . list expression COMMA
    (36) list -> . list expression
    (37) list -> . factor COMMA
    (38) list -> . list factor COMMA
    (39) list -> . list factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RSET            shift and go to state 20
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 21
    list                           shift and go to state 19
    factor                         shift and go to state 18

state 5

    (0) S' -> statement .



state 6

    (2) statement -> factor .
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (37) list -> factor . COMMA
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    $end            reduce using rule 2 (statement -> factor .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    COMMA           shift and go to state 26
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 25

state 7

    (15) factor -> PERMUTE . LPAREN list RPAREN
    (29) factor -> PERMUTE . LPAREN list

    LPAREN          shift and go to state 30


state 8

    (22) factor -> COMPUTE . LPAREN expression RPAREN
    (23) factor -> COMPUTE . LPAREN factor RPAREN

    LPAREN          shift and go to state 31


state 9

    (16) factor -> Q . LPAREN factor RPAREN
    (17) factor -> Q . LPAREN expression RPAREN

    LPAREN          shift and go to state 32


state 10

    (18) factor -> LPAREN . expression RPAREN
    (20) factor -> LPAREN . factor RPAREN
    (24) factor -> LPAREN . expression
    (26) factor -> LPAREN . factor
    (33) factor -> LPAREN . list RPAREN
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE
    (34) list -> . expression COMMA
    (35) list -> . list expression COMMA
    (36) list -> . list expression
    (37) list -> . factor COMMA
    (38) list -> . list factor COMMA
    (39) list -> . list factor

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    list                           shift and go to state 34
    expression                     shift and go to state 35
    factor                         shift and go to state 33

state 11

    (41) factor -> VARIABLE .

    TIMES           reduce using rule 41 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 41 (factor -> VARIABLE .)
    EXP             reduce using rule 41 (factor -> VARIABLE .)
    FACTORIAL       reduce using rule 41 (factor -> VARIABLE .)
    MINUS           reduce using rule 41 (factor -> VARIABLE .)
    CHOOSE          reduce using rule 41 (factor -> VARIABLE .)
    PERMUTE         reduce using rule 41 (factor -> VARIABLE .)
    Q               reduce using rule 41 (factor -> VARIABLE .)
    LPAREN          reduce using rule 41 (factor -> VARIABLE .)
    LBRACKET        reduce using rule 41 (factor -> VARIABLE .)
    COMPUTE         reduce using rule 41 (factor -> VARIABLE .)
    LSET            reduce using rule 41 (factor -> VARIABLE .)
    NUMBER          reduce using rule 41 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 41 (factor -> VARIABLE .)
    COMMA           reduce using rule 41 (factor -> VARIABLE .)
    PLUS            reduce using rule 41 (factor -> VARIABLE .)
    RBRACKET        reduce using rule 41 (factor -> VARIABLE .)
    $end            reduce using rule 41 (factor -> VARIABLE .)
    RPAREN          reduce using rule 41 (factor -> VARIABLE .)
    RSET            reduce using rule 41 (factor -> VARIABLE .)


state 12

    (3) statement -> list .
    (35) list -> list . expression COMMA
    (36) list -> list . expression
    (38) list -> list . factor COMMA
    (39) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    $end            reduce using rule 3 (statement -> list .)
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 37
    factor                         shift and go to state 36

state 13

    (14) factor -> CHOOSE . LPAREN list RPAREN
    (28) factor -> CHOOSE . LPAREN list

    LPAREN          shift and go to state 38


state 14

    (1) statement -> expression .
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor
    (34) list -> expression . COMMA

    $end            reduce using rule 1 (statement -> expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    COMMA           shift and go to state 40


state 15

    (21) factor -> LBRACKET factor . RBRACKET
    (27) factor -> LBRACKET factor .
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

  ! shift/reduce conflict for RBRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for FACTORIAL resolved as shift
  ! shift/reduce conflict for CHOOSE resolved as shift
  ! shift/reduce conflict for PERMUTE resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for COMPUTE resolved as shift
  ! shift/reduce conflict for LSET resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    RBRACKET        shift and go to state 42
    COMMA           reduce using rule 27 (factor -> LBRACKET factor .)
    $end            reduce using rule 27 (factor -> LBRACKET factor .)
    RPAREN          reduce using rule 27 (factor -> LBRACKET factor .)
    RSET            reduce using rule 27 (factor -> LBRACKET factor .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

  ! TIMES           [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! DIVIDE          [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! EXP             [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! FACTORIAL       [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! MINUS           [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! CHOOSE          [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! PERMUTE         [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! Q               [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! LPAREN          [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! LBRACKET        [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! COMPUTE         [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! LSET            [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! NUMBER          [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! VARIABLE        [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! PLUS            [ reduce using rule 27 (factor -> LBRACKET factor .) ]
  ! RBRACKET        [ reduce using rule 27 (factor -> LBRACKET factor .) ]

    factor                         shift and go to state 25

state 16

    (19) factor -> LBRACKET expression . RBRACKET
    (25) factor -> LBRACKET expression .
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

  ! shift/reduce conflict for RBRACKET resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RBRACKET        shift and go to state 43
    TIMES           reduce using rule 25 (factor -> LBRACKET expression .)
    DIVIDE          reduce using rule 25 (factor -> LBRACKET expression .)
    EXP             reduce using rule 25 (factor -> LBRACKET expression .)
    FACTORIAL       reduce using rule 25 (factor -> LBRACKET expression .)
    CHOOSE          reduce using rule 25 (factor -> LBRACKET expression .)
    PERMUTE         reduce using rule 25 (factor -> LBRACKET expression .)
    Q               reduce using rule 25 (factor -> LBRACKET expression .)
    LPAREN          reduce using rule 25 (factor -> LBRACKET expression .)
    LBRACKET        reduce using rule 25 (factor -> LBRACKET expression .)
    COMPUTE         reduce using rule 25 (factor -> LBRACKET expression .)
    LSET            reduce using rule 25 (factor -> LBRACKET expression .)
    NUMBER          reduce using rule 25 (factor -> LBRACKET expression .)
    VARIABLE        reduce using rule 25 (factor -> LBRACKET expression .)
    COMMA           reduce using rule 25 (factor -> LBRACKET expression .)
    $end            reduce using rule 25 (factor -> LBRACKET expression .)
    RPAREN          reduce using rule 25 (factor -> LBRACKET expression .)
    RSET            reduce using rule 25 (factor -> LBRACKET expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41

  ! MINUS           [ reduce using rule 25 (factor -> LBRACKET expression .) ]
  ! PLUS            [ reduce using rule 25 (factor -> LBRACKET expression .) ]
  ! RBRACKET        [ reduce using rule 25 (factor -> LBRACKET expression .) ]


state 17

    (12) factor -> MINUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RBRACKET        reduce using rule 12 (factor -> MINUS factor .)
    PLUS            reduce using rule 12 (factor -> MINUS factor .)
    COMMA           reduce using rule 12 (factor -> MINUS factor .)
    LPAREN          reduce using rule 12 (factor -> MINUS factor .)
    LBRACKET        reduce using rule 12 (factor -> MINUS factor .)
    LSET            reduce using rule 12 (factor -> MINUS factor .)
    NUMBER          reduce using rule 12 (factor -> MINUS factor .)
    VARIABLE        reduce using rule 12 (factor -> MINUS factor .)
    $end            reduce using rule 12 (factor -> MINUS factor .)
    RPAREN          reduce using rule 12 (factor -> MINUS factor .)
    RSET            reduce using rule 12 (factor -> MINUS factor .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! MINUS           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! TIMES           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! DIVIDE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! EXP             [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! FACTORIAL       [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! CHOOSE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! PERMUTE         [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! Q               [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! COMPUTE         [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 18

    (37) list -> factor . COMMA
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    COMMA           shift and go to state 26
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 25

state 19

    (30) factor -> LSET list . RSET
    (35) list -> list . expression COMMA
    (36) list -> list . expression
    (38) list -> list . factor COMMA
    (39) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RSET            shift and go to state 44
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 37
    factor                         shift and go to state 36

state 20

    (32) factor -> LSET RSET .

    TIMES           reduce using rule 32 (factor -> LSET RSET .)
    DIVIDE          reduce using rule 32 (factor -> LSET RSET .)
    EXP             reduce using rule 32 (factor -> LSET RSET .)
    FACTORIAL       reduce using rule 32 (factor -> LSET RSET .)
    MINUS           reduce using rule 32 (factor -> LSET RSET .)
    CHOOSE          reduce using rule 32 (factor -> LSET RSET .)
    PERMUTE         reduce using rule 32 (factor -> LSET RSET .)
    Q               reduce using rule 32 (factor -> LSET RSET .)
    LPAREN          reduce using rule 32 (factor -> LSET RSET .)
    LBRACKET        reduce using rule 32 (factor -> LSET RSET .)
    COMPUTE         reduce using rule 32 (factor -> LSET RSET .)
    LSET            reduce using rule 32 (factor -> LSET RSET .)
    NUMBER          reduce using rule 32 (factor -> LSET RSET .)
    VARIABLE        reduce using rule 32 (factor -> LSET RSET .)
    COMMA           reduce using rule 32 (factor -> LSET RSET .)
    PLUS            reduce using rule 32 (factor -> LSET RSET .)
    RBRACKET        reduce using rule 32 (factor -> LSET RSET .)
    $end            reduce using rule 32 (factor -> LSET RSET .)
    RPAREN          reduce using rule 32 (factor -> LSET RSET .)
    RSET            reduce using rule 32 (factor -> LSET RSET .)


state 21

    (31) factor -> LSET expression . RSET
    (34) list -> expression . COMMA
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    RSET            shift and go to state 45
    COMMA           shift and go to state 40
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41


state 22

    (10) factor -> factor EXP . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 46

state 23

    (7) expression -> factor MINUS . factor
    (12) factor -> MINUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 47

state 24

    (5) expression -> factor PLUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 48

state 25

    (11) factor -> factor factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    LPAREN          reduce using rule 11 (factor -> factor factor .)
    LBRACKET        reduce using rule 11 (factor -> factor factor .)
    LSET            reduce using rule 11 (factor -> factor factor .)
    NUMBER          reduce using rule 11 (factor -> factor factor .)
    VARIABLE        reduce using rule 11 (factor -> factor factor .)
    COMMA           reduce using rule 11 (factor -> factor factor .)
    PLUS            reduce using rule 11 (factor -> factor factor .)
    RBRACKET        reduce using rule 11 (factor -> factor factor .)
    $end            reduce using rule 11 (factor -> factor factor .)
    RPAREN          reduce using rule 11 (factor -> factor factor .)
    RSET            reduce using rule 11 (factor -> factor factor .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! TIMES           [ reduce using rule 11 (factor -> factor factor .) ]
  ! DIVIDE          [ reduce using rule 11 (factor -> factor factor .) ]
  ! EXP             [ reduce using rule 11 (factor -> factor factor .) ]
  ! FACTORIAL       [ reduce using rule 11 (factor -> factor factor .) ]
  ! MINUS           [ reduce using rule 11 (factor -> factor factor .) ]
  ! CHOOSE          [ reduce using rule 11 (factor -> factor factor .) ]
  ! PERMUTE         [ reduce using rule 11 (factor -> factor factor .) ]
  ! Q               [ reduce using rule 11 (factor -> factor factor .) ]
  ! COMPUTE         [ reduce using rule 11 (factor -> factor factor .) ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 26

    (37) list -> factor COMMA .

    RPAREN          reduce using rule 37 (list -> factor COMMA .)
    MINUS           reduce using rule 37 (list -> factor COMMA .)
    CHOOSE          reduce using rule 37 (list -> factor COMMA .)
    PERMUTE         reduce using rule 37 (list -> factor COMMA .)
    Q               reduce using rule 37 (list -> factor COMMA .)
    LPAREN          reduce using rule 37 (list -> factor COMMA .)
    LBRACKET        reduce using rule 37 (list -> factor COMMA .)
    COMPUTE         reduce using rule 37 (list -> factor COMMA .)
    LSET            reduce using rule 37 (list -> factor COMMA .)
    NUMBER          reduce using rule 37 (list -> factor COMMA .)
    VARIABLE        reduce using rule 37 (list -> factor COMMA .)
    RBRACKET        reduce using rule 37 (list -> factor COMMA .)
    PLUS            reduce using rule 37 (list -> factor COMMA .)
    TIMES           reduce using rule 37 (list -> factor COMMA .)
    DIVIDE          reduce using rule 37 (list -> factor COMMA .)
    EXP             reduce using rule 37 (list -> factor COMMA .)
    FACTORIAL       reduce using rule 37 (list -> factor COMMA .)
    COMMA           reduce using rule 37 (list -> factor COMMA .)
    $end            reduce using rule 37 (list -> factor COMMA .)
    RSET            reduce using rule 37 (list -> factor COMMA .)


state 27

    (9) factor -> factor DIVIDE . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 49

state 28

    (8) factor -> factor TIMES . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 50

state 29

    (13) factor -> factor FACTORIAL .

    TIMES           reduce using rule 13 (factor -> factor FACTORIAL .)
    DIVIDE          reduce using rule 13 (factor -> factor FACTORIAL .)
    EXP             reduce using rule 13 (factor -> factor FACTORIAL .)
    FACTORIAL       reduce using rule 13 (factor -> factor FACTORIAL .)
    MINUS           reduce using rule 13 (factor -> factor FACTORIAL .)
    CHOOSE          reduce using rule 13 (factor -> factor FACTORIAL .)
    PERMUTE         reduce using rule 13 (factor -> factor FACTORIAL .)
    Q               reduce using rule 13 (factor -> factor FACTORIAL .)
    LPAREN          reduce using rule 13 (factor -> factor FACTORIAL .)
    LBRACKET        reduce using rule 13 (factor -> factor FACTORIAL .)
    COMPUTE         reduce using rule 13 (factor -> factor FACTORIAL .)
    LSET            reduce using rule 13 (factor -> factor FACTORIAL .)
    NUMBER          reduce using rule 13 (factor -> factor FACTORIAL .)
    VARIABLE        reduce using rule 13 (factor -> factor FACTORIAL .)
    COMMA           reduce using rule 13 (factor -> factor FACTORIAL .)
    PLUS            reduce using rule 13 (factor -> factor FACTORIAL .)
    RBRACKET        reduce using rule 13 (factor -> factor FACTORIAL .)
    $end            reduce using rule 13 (factor -> factor FACTORIAL .)
    RPAREN          reduce using rule 13 (factor -> factor FACTORIAL .)
    RSET            reduce using rule 13 (factor -> factor FACTORIAL .)


state 30

    (15) factor -> PERMUTE LPAREN . list RPAREN
    (29) factor -> PERMUTE LPAREN . list
    (34) list -> . expression COMMA
    (35) list -> . list expression COMMA
    (36) list -> . list expression
    (37) list -> . factor COMMA
    (38) list -> . list factor COMMA
    (39) list -> . list factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 52
    list                           shift and go to state 51
    factor                         shift and go to state 18

state 31

    (22) factor -> COMPUTE LPAREN . expression RPAREN
    (23) factor -> COMPUTE LPAREN . factor RPAREN
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 54
    factor                         shift and go to state 53

state 32

    (16) factor -> Q LPAREN . factor RPAREN
    (17) factor -> Q LPAREN . expression RPAREN
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 56
    factor                         shift and go to state 55

state 33

    (20) factor -> LPAREN factor . RPAREN
    (26) factor -> LPAREN factor .
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (37) list -> factor . COMMA
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
  ! shift/reduce conflict for FACTORIAL resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for CHOOSE resolved as shift
  ! shift/reduce conflict for PERMUTE resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for COMPUTE resolved as shift
  ! shift/reduce conflict for LSET resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    RPAREN          shift and go to state 57
    RBRACKET        reduce using rule 26 (factor -> LPAREN factor .)
    $end            reduce using rule 26 (factor -> LPAREN factor .)
    RSET            reduce using rule 26 (factor -> LPAREN factor .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    COMMA           shift and go to state 26
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

  ! TIMES           [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! DIVIDE          [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! EXP             [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! FACTORIAL       [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! MINUS           [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! CHOOSE          [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! PERMUTE         [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! Q               [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! LPAREN          [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! LBRACKET        [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! COMPUTE         [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! LSET            [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! NUMBER          [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! VARIABLE        [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! COMMA           [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! PLUS            [ reduce using rule 26 (factor -> LPAREN factor .) ]
  ! RPAREN          [ reduce using rule 26 (factor -> LPAREN factor .) ]

    factor                         shift and go to state 25

state 34

    (33) factor -> LPAREN list . RPAREN
    (35) list -> list . expression COMMA
    (36) list -> list . expression
    (38) list -> list . factor COMMA
    (39) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RPAREN          shift and go to state 58
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 37
    factor                         shift and go to state 36

state 35

    (18) factor -> LPAREN expression . RPAREN
    (24) factor -> LPAREN expression .
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor
    (34) list -> expression . COMMA

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          shift and go to state 59
    TIMES           reduce using rule 24 (factor -> LPAREN expression .)
    DIVIDE          reduce using rule 24 (factor -> LPAREN expression .)
    EXP             reduce using rule 24 (factor -> LPAREN expression .)
    FACTORIAL       reduce using rule 24 (factor -> LPAREN expression .)
    CHOOSE          reduce using rule 24 (factor -> LPAREN expression .)
    PERMUTE         reduce using rule 24 (factor -> LPAREN expression .)
    Q               reduce using rule 24 (factor -> LPAREN expression .)
    LPAREN          reduce using rule 24 (factor -> LPAREN expression .)
    LBRACKET        reduce using rule 24 (factor -> LPAREN expression .)
    COMPUTE         reduce using rule 24 (factor -> LPAREN expression .)
    LSET            reduce using rule 24 (factor -> LPAREN expression .)
    NUMBER          reduce using rule 24 (factor -> LPAREN expression .)
    VARIABLE        reduce using rule 24 (factor -> LPAREN expression .)
    RBRACKET        reduce using rule 24 (factor -> LPAREN expression .)
    $end            reduce using rule 24 (factor -> LPAREN expression .)
    RSET            reduce using rule 24 (factor -> LPAREN expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41
    COMMA           shift and go to state 40

  ! MINUS           [ reduce using rule 24 (factor -> LPAREN expression .) ]
  ! COMMA           [ reduce using rule 24 (factor -> LPAREN expression .) ]
  ! PLUS            [ reduce using rule 24 (factor -> LPAREN expression .) ]
  ! RPAREN          [ reduce using rule 24 (factor -> LPAREN expression .) ]


state 36

    (38) list -> list factor . COMMA
    (39) list -> list factor .
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    COMMA           shift and go to state 60
    RPAREN          reduce using rule 39 (list -> list factor .)
    LPAREN          reduce using rule 39 (list -> list factor .)
    LBRACKET        reduce using rule 39 (list -> list factor .)
    LSET            reduce using rule 39 (list -> list factor .)
    NUMBER          reduce using rule 39 (list -> list factor .)
    VARIABLE        reduce using rule 39 (list -> list factor .)
    RBRACKET        reduce using rule 39 (list -> list factor .)
    $end            reduce using rule 39 (list -> list factor .)
    RSET            reduce using rule 39 (list -> list factor .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! MINUS           [ reduce using rule 39 (list -> list factor .) ]
  ! CHOOSE          [ reduce using rule 39 (list -> list factor .) ]
  ! PERMUTE         [ reduce using rule 39 (list -> list factor .) ]
  ! Q               [ reduce using rule 39 (list -> list factor .) ]
  ! COMPUTE         [ reduce using rule 39 (list -> list factor .) ]
  ! PLUS            [ reduce using rule 39 (list -> list factor .) ]
  ! TIMES           [ reduce using rule 39 (list -> list factor .) ]
  ! DIVIDE          [ reduce using rule 39 (list -> list factor .) ]
  ! EXP             [ reduce using rule 39 (list -> list factor .) ]
  ! FACTORIAL       [ reduce using rule 39 (list -> list factor .) ]
  ! COMMA           [ reduce using rule 39 (list -> list factor .) ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 37

    (35) list -> list expression . COMMA
    (36) list -> list expression .
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           shift and go to state 61
    RPAREN          reduce using rule 36 (list -> list expression .)
    CHOOSE          reduce using rule 36 (list -> list expression .)
    PERMUTE         reduce using rule 36 (list -> list expression .)
    Q               reduce using rule 36 (list -> list expression .)
    LPAREN          reduce using rule 36 (list -> list expression .)
    LBRACKET        reduce using rule 36 (list -> list expression .)
    COMPUTE         reduce using rule 36 (list -> list expression .)
    LSET            reduce using rule 36 (list -> list expression .)
    NUMBER          reduce using rule 36 (list -> list expression .)
    VARIABLE        reduce using rule 36 (list -> list expression .)
    RBRACKET        reduce using rule 36 (list -> list expression .)
    TIMES           reduce using rule 36 (list -> list expression .)
    DIVIDE          reduce using rule 36 (list -> list expression .)
    EXP             reduce using rule 36 (list -> list expression .)
    FACTORIAL       reduce using rule 36 (list -> list expression .)
    $end            reduce using rule 36 (list -> list expression .)
    RSET            reduce using rule 36 (list -> list expression .)
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41

  ! MINUS           [ reduce using rule 36 (list -> list expression .) ]
  ! PLUS            [ reduce using rule 36 (list -> list expression .) ]
  ! COMMA           [ reduce using rule 36 (list -> list expression .) ]


state 38

    (14) factor -> CHOOSE LPAREN . list RPAREN
    (28) factor -> CHOOSE LPAREN . list
    (34) list -> . expression COMMA
    (35) list -> . list expression COMMA
    (36) list -> . list expression
    (37) list -> . factor COMMA
    (38) list -> . list factor COMMA
    (39) list -> . list factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    expression                     shift and go to state 52
    list                           shift and go to state 62
    factor                         shift and go to state 18

state 39

    (4) expression -> expression PLUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 63

state 40

    (34) list -> expression COMMA .

    RPAREN          reduce using rule 34 (list -> expression COMMA .)
    MINUS           reduce using rule 34 (list -> expression COMMA .)
    CHOOSE          reduce using rule 34 (list -> expression COMMA .)
    PERMUTE         reduce using rule 34 (list -> expression COMMA .)
    Q               reduce using rule 34 (list -> expression COMMA .)
    LPAREN          reduce using rule 34 (list -> expression COMMA .)
    LBRACKET        reduce using rule 34 (list -> expression COMMA .)
    COMPUTE         reduce using rule 34 (list -> expression COMMA .)
    LSET            reduce using rule 34 (list -> expression COMMA .)
    NUMBER          reduce using rule 34 (list -> expression COMMA .)
    VARIABLE        reduce using rule 34 (list -> expression COMMA .)
    RBRACKET        reduce using rule 34 (list -> expression COMMA .)
    PLUS            reduce using rule 34 (list -> expression COMMA .)
    TIMES           reduce using rule 34 (list -> expression COMMA .)
    DIVIDE          reduce using rule 34 (list -> expression COMMA .)
    EXP             reduce using rule 34 (list -> expression COMMA .)
    FACTORIAL       reduce using rule 34 (list -> expression COMMA .)
    COMMA           reduce using rule 34 (list -> expression COMMA .)
    $end            reduce using rule 34 (list -> expression COMMA .)
    RSET            reduce using rule 34 (list -> expression COMMA .)


state 41

    (6) expression -> expression MINUS . factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 64

state 42

    (21) factor -> LBRACKET factor RBRACKET .

    TIMES           reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    DIVIDE          reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    EXP             reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    FACTORIAL       reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    MINUS           reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    CHOOSE          reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    PERMUTE         reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    Q               reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    LPAREN          reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    LBRACKET        reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    COMPUTE         reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    LSET            reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    NUMBER          reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    VARIABLE        reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    COMMA           reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    PLUS            reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    RBRACKET        reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    $end            reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    RPAREN          reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)
    RSET            reduce using rule 21 (factor -> LBRACKET factor RBRACKET .)


state 43

    (19) factor -> LBRACKET expression RBRACKET .

    TIMES           reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    EXP             reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    FACTORIAL       reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    CHOOSE          reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    PERMUTE         reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    Q               reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    COMPUTE         reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    LSET            reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    VARIABLE        reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    $end            reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)
    RSET            reduce using rule 19 (factor -> LBRACKET expression RBRACKET .)


state 44

    (30) factor -> LSET list RSET .

    TIMES           reduce using rule 30 (factor -> LSET list RSET .)
    DIVIDE          reduce using rule 30 (factor -> LSET list RSET .)
    EXP             reduce using rule 30 (factor -> LSET list RSET .)
    FACTORIAL       reduce using rule 30 (factor -> LSET list RSET .)
    MINUS           reduce using rule 30 (factor -> LSET list RSET .)
    CHOOSE          reduce using rule 30 (factor -> LSET list RSET .)
    PERMUTE         reduce using rule 30 (factor -> LSET list RSET .)
    Q               reduce using rule 30 (factor -> LSET list RSET .)
    LPAREN          reduce using rule 30 (factor -> LSET list RSET .)
    LBRACKET        reduce using rule 30 (factor -> LSET list RSET .)
    COMPUTE         reduce using rule 30 (factor -> LSET list RSET .)
    LSET            reduce using rule 30 (factor -> LSET list RSET .)
    NUMBER          reduce using rule 30 (factor -> LSET list RSET .)
    VARIABLE        reduce using rule 30 (factor -> LSET list RSET .)
    COMMA           reduce using rule 30 (factor -> LSET list RSET .)
    PLUS            reduce using rule 30 (factor -> LSET list RSET .)
    RBRACKET        reduce using rule 30 (factor -> LSET list RSET .)
    $end            reduce using rule 30 (factor -> LSET list RSET .)
    RPAREN          reduce using rule 30 (factor -> LSET list RSET .)
    RSET            reduce using rule 30 (factor -> LSET list RSET .)


state 45

    (31) factor -> LSET expression RSET .

    TIMES           reduce using rule 31 (factor -> LSET expression RSET .)
    DIVIDE          reduce using rule 31 (factor -> LSET expression RSET .)
    EXP             reduce using rule 31 (factor -> LSET expression RSET .)
    FACTORIAL       reduce using rule 31 (factor -> LSET expression RSET .)
    MINUS           reduce using rule 31 (factor -> LSET expression RSET .)
    CHOOSE          reduce using rule 31 (factor -> LSET expression RSET .)
    PERMUTE         reduce using rule 31 (factor -> LSET expression RSET .)
    Q               reduce using rule 31 (factor -> LSET expression RSET .)
    LPAREN          reduce using rule 31 (factor -> LSET expression RSET .)
    LBRACKET        reduce using rule 31 (factor -> LSET expression RSET .)
    COMPUTE         reduce using rule 31 (factor -> LSET expression RSET .)
    LSET            reduce using rule 31 (factor -> LSET expression RSET .)
    NUMBER          reduce using rule 31 (factor -> LSET expression RSET .)
    VARIABLE        reduce using rule 31 (factor -> LSET expression RSET .)
    COMMA           reduce using rule 31 (factor -> LSET expression RSET .)
    PLUS            reduce using rule 31 (factor -> LSET expression RSET .)
    RBRACKET        reduce using rule 31 (factor -> LSET expression RSET .)
    $end            reduce using rule 31 (factor -> LSET expression RSET .)
    RPAREN          reduce using rule 31 (factor -> LSET expression RSET .)
    RSET            reduce using rule 31 (factor -> LSET expression RSET .)


state 46

    (10) factor -> factor EXP factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    TIMES           reduce using rule 10 (factor -> factor EXP factor .)
    DIVIDE          reduce using rule 10 (factor -> factor EXP factor .)
    EXP             reduce using rule 10 (factor -> factor EXP factor .)
    MINUS           reduce using rule 10 (factor -> factor EXP factor .)
    LPAREN          reduce using rule 10 (factor -> factor EXP factor .)
    LBRACKET        reduce using rule 10 (factor -> factor EXP factor .)
    LSET            reduce using rule 10 (factor -> factor EXP factor .)
    NUMBER          reduce using rule 10 (factor -> factor EXP factor .)
    VARIABLE        reduce using rule 10 (factor -> factor EXP factor .)
    COMMA           reduce using rule 10 (factor -> factor EXP factor .)
    PLUS            reduce using rule 10 (factor -> factor EXP factor .)
    RBRACKET        reduce using rule 10 (factor -> factor EXP factor .)
    $end            reduce using rule 10 (factor -> factor EXP factor .)
    RPAREN          reduce using rule 10 (factor -> factor EXP factor .)
    RSET            reduce using rule 10 (factor -> factor EXP factor .)
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! FACTORIAL       [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! CHOOSE          [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! PERMUTE         [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! Q               [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! COMPUTE         [ reduce using rule 10 (factor -> factor EXP factor .) ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! EXP             [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 47

    (7) expression -> factor MINUS factor .
    (12) factor -> MINUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

  ! reduce/reduce conflict for TIMES resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for EXP resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for FACTORIAL resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for CHOOSE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for PERMUTE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for Q resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for LPAREN resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for COMPUTE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for LSET resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for NUMBER resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for PLUS resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for $end resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 7 (expression -> factor MINUS factor .)
  ! reduce/reduce conflict for RSET resolved using rule 7 (expression -> factor MINUS factor .)
    RPAREN          reduce using rule 7 (expression -> factor MINUS factor .)
    PLUS            reduce using rule 7 (expression -> factor MINUS factor .)
    MINUS           reduce using rule 7 (expression -> factor MINUS factor .)
    RBRACKET        reduce using rule 7 (expression -> factor MINUS factor .)
    COMMA           reduce using rule 7 (expression -> factor MINUS factor .)
    LPAREN          reduce using rule 7 (expression -> factor MINUS factor .)
    LBRACKET        reduce using rule 7 (expression -> factor MINUS factor .)
    LSET            reduce using rule 7 (expression -> factor MINUS factor .)
    NUMBER          reduce using rule 7 (expression -> factor MINUS factor .)
    VARIABLE        reduce using rule 7 (expression -> factor MINUS factor .)
    $end            reduce using rule 7 (expression -> factor MINUS factor .)
    RSET            reduce using rule 7 (expression -> factor MINUS factor .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! TIMES           [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! EXP             [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! FACTORIAL       [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! CHOOSE          [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! PERMUTE         [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! Q               [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! COMPUTE         [ reduce using rule 7 (expression -> factor MINUS factor .) ]
  ! TIMES           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! DIVIDE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! EXP             [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! FACTORIAL       [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! MINUS           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! CHOOSE          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! PERMUTE         [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! Q               [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LPAREN          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LBRACKET        [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! COMPUTE         [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! LSET            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! NUMBER          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! VARIABLE        [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! COMMA           [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! PLUS            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! RBRACKET        [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! $end            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! RPAREN          [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! RSET            [ reduce using rule 12 (factor -> MINUS factor .) ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 48

    (5) expression -> factor PLUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RPAREN          reduce using rule 5 (expression -> factor PLUS factor .)
    PLUS            reduce using rule 5 (expression -> factor PLUS factor .)
    MINUS           reduce using rule 5 (expression -> factor PLUS factor .)
    RBRACKET        reduce using rule 5 (expression -> factor PLUS factor .)
    COMMA           reduce using rule 5 (expression -> factor PLUS factor .)
    LPAREN          reduce using rule 5 (expression -> factor PLUS factor .)
    LBRACKET        reduce using rule 5 (expression -> factor PLUS factor .)
    LSET            reduce using rule 5 (expression -> factor PLUS factor .)
    NUMBER          reduce using rule 5 (expression -> factor PLUS factor .)
    VARIABLE        reduce using rule 5 (expression -> factor PLUS factor .)
    $end            reduce using rule 5 (expression -> factor PLUS factor .)
    RSET            reduce using rule 5 (expression -> factor PLUS factor .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! TIMES           [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! EXP             [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! FACTORIAL       [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! CHOOSE          [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! PERMUTE         [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! Q               [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! COMPUTE         [ reduce using rule 5 (expression -> factor PLUS factor .) ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 49

    (9) factor -> factor DIVIDE factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    TIMES           reduce using rule 9 (factor -> factor DIVIDE factor .)
    DIVIDE          reduce using rule 9 (factor -> factor DIVIDE factor .)
    MINUS           reduce using rule 9 (factor -> factor DIVIDE factor .)
    LPAREN          reduce using rule 9 (factor -> factor DIVIDE factor .)
    LBRACKET        reduce using rule 9 (factor -> factor DIVIDE factor .)
    LSET            reduce using rule 9 (factor -> factor DIVIDE factor .)
    NUMBER          reduce using rule 9 (factor -> factor DIVIDE factor .)
    VARIABLE        reduce using rule 9 (factor -> factor DIVIDE factor .)
    COMMA           reduce using rule 9 (factor -> factor DIVIDE factor .)
    PLUS            reduce using rule 9 (factor -> factor DIVIDE factor .)
    RBRACKET        reduce using rule 9 (factor -> factor DIVIDE factor .)
    $end            reduce using rule 9 (factor -> factor DIVIDE factor .)
    RPAREN          reduce using rule 9 (factor -> factor DIVIDE factor .)
    RSET            reduce using rule 9 (factor -> factor DIVIDE factor .)
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! EXP             [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! FACTORIAL       [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! CHOOSE          [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! PERMUTE         [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! Q               [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! COMPUTE         [ reduce using rule 9 (factor -> factor DIVIDE factor .) ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 50

    (8) factor -> factor TIMES factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    TIMES           reduce using rule 8 (factor -> factor TIMES factor .)
    DIVIDE          reduce using rule 8 (factor -> factor TIMES factor .)
    MINUS           reduce using rule 8 (factor -> factor TIMES factor .)
    LPAREN          reduce using rule 8 (factor -> factor TIMES factor .)
    LBRACKET        reduce using rule 8 (factor -> factor TIMES factor .)
    LSET            reduce using rule 8 (factor -> factor TIMES factor .)
    NUMBER          reduce using rule 8 (factor -> factor TIMES factor .)
    VARIABLE        reduce using rule 8 (factor -> factor TIMES factor .)
    COMMA           reduce using rule 8 (factor -> factor TIMES factor .)
    PLUS            reduce using rule 8 (factor -> factor TIMES factor .)
    RBRACKET        reduce using rule 8 (factor -> factor TIMES factor .)
    $end            reduce using rule 8 (factor -> factor TIMES factor .)
    RPAREN          reduce using rule 8 (factor -> factor TIMES factor .)
    RSET            reduce using rule 8 (factor -> factor TIMES factor .)
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! EXP             [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! FACTORIAL       [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! CHOOSE          [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! PERMUTE         [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! Q               [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! COMPUTE         [ reduce using rule 8 (factor -> factor TIMES factor .) ]
  ! TIMES           [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 27 ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 51

    (15) factor -> PERMUTE LPAREN list . RPAREN
    (29) factor -> PERMUTE LPAREN list .
    (35) list -> list . expression COMMA
    (36) list -> list . expression
    (38) list -> list . factor COMMA
    (39) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CHOOSE resolved as shift
  ! shift/reduce conflict for PERMUTE resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for COMPUTE resolved as shift
  ! shift/reduce conflict for LSET resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    RPAREN          shift and go to state 65
    TIMES           reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    DIVIDE          reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    EXP             reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    FACTORIAL       reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    COMMA           reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    PLUS            reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    RBRACKET        reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    $end            reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    RSET            reduce using rule 29 (factor -> PERMUTE LPAREN list .)
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

  ! MINUS           [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! CHOOSE          [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! PERMUTE         [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! Q               [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! LPAREN          [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! LBRACKET        [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! COMPUTE         [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! LSET            [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! NUMBER          [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! VARIABLE        [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]
  ! RPAREN          [ reduce using rule 29 (factor -> PERMUTE LPAREN list .) ]

    expression                     shift and go to state 37
    factor                         shift and go to state 36

state 52

    (34) list -> expression . COMMA
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    COMMA           shift and go to state 40
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41


state 53

    (23) factor -> COMPUTE LPAREN factor . RPAREN
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RPAREN          shift and go to state 66
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 25

state 54

    (22) factor -> COMPUTE LPAREN expression . RPAREN
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    RPAREN          shift and go to state 67
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41


state 55

    (16) factor -> Q LPAREN factor . RPAREN
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (5) expression -> factor . PLUS factor
    (7) expression -> factor . MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RPAREN          shift and go to state 68
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    PLUS            shift and go to state 24
    MINUS           shift and go to state 23
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

    factor                         shift and go to state 25

state 56

    (17) factor -> Q LPAREN expression . RPAREN
    (4) expression -> expression . PLUS factor
    (6) expression -> expression . MINUS factor

    RPAREN          shift and go to state 69
    PLUS            shift and go to state 39
    MINUS           shift and go to state 41


state 57

    (20) factor -> LPAREN factor RPAREN .

    TIMES           reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    DIVIDE          reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    EXP             reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    FACTORIAL       reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    MINUS           reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    CHOOSE          reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    PERMUTE         reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    Q               reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    LPAREN          reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    LBRACKET        reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    COMPUTE         reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    LSET            reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    NUMBER          reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    VARIABLE        reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    COMMA           reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    PLUS            reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    RBRACKET        reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    $end            reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    RPAREN          reduce using rule 20 (factor -> LPAREN factor RPAREN .)
    RSET            reduce using rule 20 (factor -> LPAREN factor RPAREN .)


state 58

    (33) factor -> LPAREN list RPAREN .

    TIMES           reduce using rule 33 (factor -> LPAREN list RPAREN .)
    DIVIDE          reduce using rule 33 (factor -> LPAREN list RPAREN .)
    EXP             reduce using rule 33 (factor -> LPAREN list RPAREN .)
    FACTORIAL       reduce using rule 33 (factor -> LPAREN list RPAREN .)
    MINUS           reduce using rule 33 (factor -> LPAREN list RPAREN .)
    CHOOSE          reduce using rule 33 (factor -> LPAREN list RPAREN .)
    PERMUTE         reduce using rule 33 (factor -> LPAREN list RPAREN .)
    Q               reduce using rule 33 (factor -> LPAREN list RPAREN .)
    LPAREN          reduce using rule 33 (factor -> LPAREN list RPAREN .)
    LBRACKET        reduce using rule 33 (factor -> LPAREN list RPAREN .)
    COMPUTE         reduce using rule 33 (factor -> LPAREN list RPAREN .)
    LSET            reduce using rule 33 (factor -> LPAREN list RPAREN .)
    NUMBER          reduce using rule 33 (factor -> LPAREN list RPAREN .)
    VARIABLE        reduce using rule 33 (factor -> LPAREN list RPAREN .)
    COMMA           reduce using rule 33 (factor -> LPAREN list RPAREN .)
    PLUS            reduce using rule 33 (factor -> LPAREN list RPAREN .)
    RBRACKET        reduce using rule 33 (factor -> LPAREN list RPAREN .)
    $end            reduce using rule 33 (factor -> LPAREN list RPAREN .)
    RPAREN          reduce using rule 33 (factor -> LPAREN list RPAREN .)
    RSET            reduce using rule 33 (factor -> LPAREN list RPAREN .)


state 59

    (18) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    EXP             reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    FACTORIAL       reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    CHOOSE          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    PERMUTE         reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    Q               reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    COMPUTE         reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    LSET            reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    RSET            reduce using rule 18 (factor -> LPAREN expression RPAREN .)


state 60

    (38) list -> list factor COMMA .

    RPAREN          reduce using rule 38 (list -> list factor COMMA .)
    MINUS           reduce using rule 38 (list -> list factor COMMA .)
    CHOOSE          reduce using rule 38 (list -> list factor COMMA .)
    PERMUTE         reduce using rule 38 (list -> list factor COMMA .)
    Q               reduce using rule 38 (list -> list factor COMMA .)
    LPAREN          reduce using rule 38 (list -> list factor COMMA .)
    LBRACKET        reduce using rule 38 (list -> list factor COMMA .)
    COMPUTE         reduce using rule 38 (list -> list factor COMMA .)
    LSET            reduce using rule 38 (list -> list factor COMMA .)
    NUMBER          reduce using rule 38 (list -> list factor COMMA .)
    VARIABLE        reduce using rule 38 (list -> list factor COMMA .)
    RBRACKET        reduce using rule 38 (list -> list factor COMMA .)
    PLUS            reduce using rule 38 (list -> list factor COMMA .)
    TIMES           reduce using rule 38 (list -> list factor COMMA .)
    DIVIDE          reduce using rule 38 (list -> list factor COMMA .)
    EXP             reduce using rule 38 (list -> list factor COMMA .)
    FACTORIAL       reduce using rule 38 (list -> list factor COMMA .)
    COMMA           reduce using rule 38 (list -> list factor COMMA .)
    $end            reduce using rule 38 (list -> list factor COMMA .)
    RSET            reduce using rule 38 (list -> list factor COMMA .)


state 61

    (35) list -> list expression COMMA .

    RPAREN          reduce using rule 35 (list -> list expression COMMA .)
    MINUS           reduce using rule 35 (list -> list expression COMMA .)
    CHOOSE          reduce using rule 35 (list -> list expression COMMA .)
    PERMUTE         reduce using rule 35 (list -> list expression COMMA .)
    Q               reduce using rule 35 (list -> list expression COMMA .)
    LPAREN          reduce using rule 35 (list -> list expression COMMA .)
    LBRACKET        reduce using rule 35 (list -> list expression COMMA .)
    COMPUTE         reduce using rule 35 (list -> list expression COMMA .)
    LSET            reduce using rule 35 (list -> list expression COMMA .)
    NUMBER          reduce using rule 35 (list -> list expression COMMA .)
    VARIABLE        reduce using rule 35 (list -> list expression COMMA .)
    RBRACKET        reduce using rule 35 (list -> list expression COMMA .)
    PLUS            reduce using rule 35 (list -> list expression COMMA .)
    TIMES           reduce using rule 35 (list -> list expression COMMA .)
    DIVIDE          reduce using rule 35 (list -> list expression COMMA .)
    EXP             reduce using rule 35 (list -> list expression COMMA .)
    FACTORIAL       reduce using rule 35 (list -> list expression COMMA .)
    COMMA           reduce using rule 35 (list -> list expression COMMA .)
    $end            reduce using rule 35 (list -> list expression COMMA .)
    RSET            reduce using rule 35 (list -> list expression COMMA .)


state 62

    (14) factor -> CHOOSE LPAREN list . RPAREN
    (28) factor -> CHOOSE LPAREN list .
    (35) list -> list . expression COMMA
    (36) list -> list . expression
    (38) list -> list . factor COMMA
    (39) list -> list . factor
    (4) expression -> . expression PLUS factor
    (5) expression -> . factor PLUS factor
    (6) expression -> . expression MINUS factor
    (7) expression -> . factor MINUS factor
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CHOOSE resolved as shift
  ! shift/reduce conflict for PERMUTE resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for COMPUTE resolved as shift
  ! shift/reduce conflict for LSET resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    RPAREN          shift and go to state 70
    TIMES           reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    DIVIDE          reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    EXP             reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    FACTORIAL       reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    COMMA           reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    PLUS            reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    RBRACKET        reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    $end            reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    RSET            reduce using rule 28 (factor -> CHOOSE LPAREN list .)
    MINUS           shift and go to state 3
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    LPAREN          shift and go to state 10
    LBRACKET        shift and go to state 2
    COMPUTE         shift and go to state 8
    LSET            shift and go to state 4
    NUMBER          shift and go to state 1
    VARIABLE        shift and go to state 11

  ! MINUS           [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! CHOOSE          [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! PERMUTE         [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! Q               [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! LPAREN          [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! LBRACKET        [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! COMPUTE         [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! LSET            [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! NUMBER          [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! VARIABLE        [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]
  ! RPAREN          [ reduce using rule 28 (factor -> CHOOSE LPAREN list .) ]

    expression                     shift and go to state 37
    factor                         shift and go to state 36

state 63

    (4) expression -> expression PLUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RPAREN          reduce using rule 4 (expression -> expression PLUS factor .)
    PLUS            reduce using rule 4 (expression -> expression PLUS factor .)
    MINUS           reduce using rule 4 (expression -> expression PLUS factor .)
    RBRACKET        reduce using rule 4 (expression -> expression PLUS factor .)
    COMMA           reduce using rule 4 (expression -> expression PLUS factor .)
    LPAREN          reduce using rule 4 (expression -> expression PLUS factor .)
    LBRACKET        reduce using rule 4 (expression -> expression PLUS factor .)
    LSET            reduce using rule 4 (expression -> expression PLUS factor .)
    NUMBER          reduce using rule 4 (expression -> expression PLUS factor .)
    VARIABLE        reduce using rule 4 (expression -> expression PLUS factor .)
    $end            reduce using rule 4 (expression -> expression PLUS factor .)
    RSET            reduce using rule 4 (expression -> expression PLUS factor .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! TIMES           [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! EXP             [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! FACTORIAL       [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! CHOOSE          [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! PERMUTE         [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! Q               [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! COMPUTE         [ reduce using rule 4 (expression -> expression PLUS factor .) ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 64

    (6) expression -> expression MINUS factor .
    (8) factor -> factor . TIMES factor
    (9) factor -> factor . DIVIDE factor
    (10) factor -> factor . EXP factor
    (11) factor -> factor . factor
    (13) factor -> factor . FACTORIAL
    (8) factor -> . factor TIMES factor
    (9) factor -> . factor DIVIDE factor
    (10) factor -> . factor EXP factor
    (11) factor -> . factor factor
    (12) factor -> . MINUS factor
    (13) factor -> . factor FACTORIAL
    (14) factor -> . CHOOSE LPAREN list RPAREN
    (15) factor -> . PERMUTE LPAREN list RPAREN
    (16) factor -> . Q LPAREN factor RPAREN
    (17) factor -> . Q LPAREN expression RPAREN
    (18) factor -> . LPAREN expression RPAREN
    (19) factor -> . LBRACKET expression RBRACKET
    (20) factor -> . LPAREN factor RPAREN
    (21) factor -> . LBRACKET factor RBRACKET
    (22) factor -> . COMPUTE LPAREN expression RPAREN
    (23) factor -> . COMPUTE LPAREN factor RPAREN
    (24) factor -> . LPAREN expression
    (25) factor -> . LBRACKET expression
    (26) factor -> . LPAREN factor
    (27) factor -> . LBRACKET factor
    (28) factor -> . CHOOSE LPAREN list
    (29) factor -> . PERMUTE LPAREN list
    (30) factor -> . LSET list RSET
    (31) factor -> . LSET expression RSET
    (32) factor -> . LSET RSET
    (33) factor -> . LPAREN list RPAREN
    (40) factor -> . NUMBER
    (41) factor -> . VARIABLE

    RPAREN          reduce using rule 6 (expression -> expression MINUS factor .)
    PLUS            reduce using rule 6 (expression -> expression MINUS factor .)
    MINUS           reduce using rule 6 (expression -> expression MINUS factor .)
    RBRACKET        reduce using rule 6 (expression -> expression MINUS factor .)
    COMMA           reduce using rule 6 (expression -> expression MINUS factor .)
    LPAREN          reduce using rule 6 (expression -> expression MINUS factor .)
    LBRACKET        reduce using rule 6 (expression -> expression MINUS factor .)
    LSET            reduce using rule 6 (expression -> expression MINUS factor .)
    NUMBER          reduce using rule 6 (expression -> expression MINUS factor .)
    VARIABLE        reduce using rule 6 (expression -> expression MINUS factor .)
    $end            reduce using rule 6 (expression -> expression MINUS factor .)
    RSET            reduce using rule 6 (expression -> expression MINUS factor .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 27
    EXP             shift and go to state 22
    FACTORIAL       shift and go to state 29
    CHOOSE          shift and go to state 13
    PERMUTE         shift and go to state 7
    Q               shift and go to state 9
    COMPUTE         shift and go to state 8

  ! TIMES           [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! EXP             [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! FACTORIAL       [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! CHOOSE          [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! PERMUTE         [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! Q               [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! COMPUTE         [ reduce using rule 6 (expression -> expression MINUS factor .) ]
  ! MINUS           [ shift and go to state 3 ]
  ! LPAREN          [ shift and go to state 10 ]
  ! LBRACKET        [ shift and go to state 2 ]
  ! LSET            [ shift and go to state 4 ]
  ! NUMBER          [ shift and go to state 1 ]
  ! VARIABLE        [ shift and go to state 11 ]

    factor                         shift and go to state 25

state 65

    (15) factor -> PERMUTE LPAREN list RPAREN .

    TIMES           reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    DIVIDE          reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    EXP             reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    FACTORIAL       reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    MINUS           reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    CHOOSE          reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    PERMUTE         reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    Q               reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    LPAREN          reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    LBRACKET        reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    COMPUTE         reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    LSET            reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    NUMBER          reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    VARIABLE        reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    COMMA           reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    PLUS            reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    RBRACKET        reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    $end            reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    RPAREN          reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)
    RSET            reduce using rule 15 (factor -> PERMUTE LPAREN list RPAREN .)


state 66

    (23) factor -> COMPUTE LPAREN factor RPAREN .

    TIMES           reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    DIVIDE          reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    EXP             reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    FACTORIAL       reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    MINUS           reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    CHOOSE          reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    PERMUTE         reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    Q               reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    LPAREN          reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    LBRACKET        reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    COMPUTE         reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    LSET            reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    NUMBER          reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    VARIABLE        reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    COMMA           reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    PLUS            reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    RBRACKET        reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    $end            reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    RPAREN          reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)
    RSET            reduce using rule 23 (factor -> COMPUTE LPAREN factor RPAREN .)


state 67

    (22) factor -> COMPUTE LPAREN expression RPAREN .

    TIMES           reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    EXP             reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    FACTORIAL       reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    CHOOSE          reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    PERMUTE         reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    Q               reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    COMPUTE         reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    LSET            reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    NUMBER          reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    COMMA           reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    PLUS            reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    $end            reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)
    RSET            reduce using rule 22 (factor -> COMPUTE LPAREN expression RPAREN .)


state 68

    (16) factor -> Q LPAREN factor RPAREN .

    TIMES           reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    DIVIDE          reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    EXP             reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    FACTORIAL       reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    MINUS           reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    CHOOSE          reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    PERMUTE         reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    Q               reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    LPAREN          reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    LBRACKET        reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    COMPUTE         reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    LSET            reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    NUMBER          reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    VARIABLE        reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    COMMA           reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    PLUS            reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    RBRACKET        reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    $end            reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    RPAREN          reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)
    RSET            reduce using rule 16 (factor -> Q LPAREN factor RPAREN .)


state 69

    (17) factor -> Q LPAREN expression RPAREN .

    TIMES           reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    EXP             reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    FACTORIAL       reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    MINUS           reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    CHOOSE          reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    PERMUTE         reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    Q               reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    LPAREN          reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    COMPUTE         reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    LSET            reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    NUMBER          reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    COMMA           reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    PLUS            reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    $end            reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)
    RSET            reduce using rule 17 (factor -> Q LPAREN expression RPAREN .)


state 70

    (14) factor -> CHOOSE LPAREN list RPAREN .

    TIMES           reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    DIVIDE          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    EXP             reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    FACTORIAL       reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    MINUS           reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    CHOOSE          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    PERMUTE         reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    Q               reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    LPAREN          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    LBRACKET        reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    COMPUTE         reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    LSET            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    NUMBER          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    VARIABLE        reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    COMMA           reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    PLUS            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    RBRACKET        reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    $end            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    RPAREN          reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)
    RSET            reduce using rule 14 (factor -> CHOOSE LPAREN list RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACKET in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 15 resolved as shift
WARNING: shift/reduce conflict for EXP in state 15 resolved as shift
WARNING: shift/reduce conflict for FACTORIAL in state 15 resolved as shift
WARNING: shift/reduce conflict for CHOOSE in state 15 resolved as shift
WARNING: shift/reduce conflict for PERMUTE in state 15 resolved as shift
WARNING: shift/reduce conflict for Q in state 15 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 15 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 15 resolved as shift
WARNING: shift/reduce conflict for COMPUTE in state 15 resolved as shift
WARNING: shift/reduce conflict for LSET in state 15 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 15 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 15 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for EXP in state 33 resolved as shift
WARNING: shift/reduce conflict for FACTORIAL in state 33 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 33 resolved as shift
WARNING: shift/reduce conflict for CHOOSE in state 33 resolved as shift
WARNING: shift/reduce conflict for PERMUTE in state 33 resolved as shift
WARNING: shift/reduce conflict for Q in state 33 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 33 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 33 resolved as shift
WARNING: shift/reduce conflict for COMPUTE in state 33 resolved as shift
WARNING: shift/reduce conflict for LSET in state 33 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 33 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 33 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 51 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for CHOOSE in state 51 resolved as shift
WARNING: shift/reduce conflict for PERMUTE in state 51 resolved as shift
WARNING: shift/reduce conflict for Q in state 51 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 51 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 51 resolved as shift
WARNING: shift/reduce conflict for COMPUTE in state 51 resolved as shift
WARNING: shift/reduce conflict for LSET in state 51 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 51 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 51 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for CHOOSE in state 62 resolved as shift
WARNING: shift/reduce conflict for PERMUTE in state 62 resolved as shift
WARNING: shift/reduce conflict for Q in state 62 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 62 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 62 resolved as shift
WARNING: shift/reduce conflict for COMPUTE in state 62 resolved as shift
WARNING: shift/reduce conflict for LSET in state 62 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 62 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 62 resolved as shift
WARNING: reduce/reduce conflict in state 47 resolved using rule (expression -> factor MINUS factor)
WARNING: rejected rule (factor -> MINUS factor) in state 47
